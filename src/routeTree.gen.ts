/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PcImport } from './routes/pc'
import { Route as DmImport } from './routes/dm'
import { Route as AboutRouteImport } from './routes/about/route'
import { Route as IndexImport } from './routes/index'
import { Route as PcIndexImport } from './routes/pc/index'
import { Route as DmIndexImport } from './routes/dm/index'
import { Route as CampaignsIndexImport } from './routes/campaigns/index'
import { Route as PcCharacterSheetImport } from './routes/pc/character-sheet'
import { Route as DmBattleImport } from './routes/dm/battle'
import { Route as CampaignsCampaignIdImport } from './routes/campaigns.$campaignId'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthProfileImport } from './routes/auth/profile'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthEmailConfirmImport } from './routes/auth/email-confirm'
import { Route as CampaignsCampaignIdIndexImport } from './routes/campaigns/$campaignId/index'

// Create/Update Routes

const PcRoute = PcImport.update({
  path: '/pc',
  getParentRoute: () => rootRoute,
} as any)

const DmRoute = DmImport.update({
  path: '/dm',
  getParentRoute: () => rootRoute,
} as any)

const AboutRouteRoute = AboutRouteImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PcIndexRoute = PcIndexImport.update({
  path: '/',
  getParentRoute: () => PcRoute,
} as any)

const DmIndexRoute = DmIndexImport.update({
  path: '/',
  getParentRoute: () => DmRoute,
} as any)

const CampaignsIndexRoute = CampaignsIndexImport.update({
  path: '/campaigns/',
  getParentRoute: () => rootRoute,
} as any)

const PcCharacterSheetRoute = PcCharacterSheetImport.update({
  path: '/character-sheet',
  getParentRoute: () => PcRoute,
} as any)

const DmBattleRoute = DmBattleImport.update({
  path: '/battle',
  getParentRoute: () => DmRoute,
} as any)

const CampaignsCampaignIdRoute = CampaignsCampaignIdImport.update({
  path: '/campaigns/$campaignId',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  path: '/auth/profile',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthEmailConfirmRoute = AuthEmailConfirmImport.update({
  path: '/auth/email-confirm',
  getParentRoute: () => rootRoute,
} as any)

const CampaignsCampaignIdIndexRoute = CampaignsCampaignIdIndexImport.update({
  path: '/',
  getParentRoute: () => CampaignsCampaignIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRoute
    }
    '/dm': {
      id: '/dm'
      path: '/dm'
      fullPath: '/dm'
      preLoaderRoute: typeof DmImport
      parentRoute: typeof rootRoute
    }
    '/pc': {
      id: '/pc'
      path: '/pc'
      fullPath: '/pc'
      preLoaderRoute: typeof PcImport
      parentRoute: typeof rootRoute
    }
    '/auth/email-confirm': {
      id: '/auth/email-confirm'
      path: '/auth/email-confirm'
      fullPath: '/auth/email-confirm'
      preLoaderRoute: typeof AuthEmailConfirmImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/profile': {
      id: '/auth/profile'
      path: '/auth/profile'
      fullPath: '/auth/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/campaigns/$campaignId': {
      id: '/campaigns/$campaignId'
      path: '/campaigns/$campaignId'
      fullPath: '/campaigns/$campaignId'
      preLoaderRoute: typeof CampaignsCampaignIdImport
      parentRoute: typeof rootRoute
    }
    '/dm/battle': {
      id: '/dm/battle'
      path: '/battle'
      fullPath: '/dm/battle'
      preLoaderRoute: typeof DmBattleImport
      parentRoute: typeof DmImport
    }
    '/pc/character-sheet': {
      id: '/pc/character-sheet'
      path: '/character-sheet'
      fullPath: '/pc/character-sheet'
      preLoaderRoute: typeof PcCharacterSheetImport
      parentRoute: typeof PcImport
    }
    '/campaigns/': {
      id: '/campaigns/'
      path: '/campaigns'
      fullPath: '/campaigns'
      preLoaderRoute: typeof CampaignsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dm/': {
      id: '/dm/'
      path: '/'
      fullPath: '/dm/'
      preLoaderRoute: typeof DmIndexImport
      parentRoute: typeof DmImport
    }
    '/pc/': {
      id: '/pc/'
      path: '/'
      fullPath: '/pc/'
      preLoaderRoute: typeof PcIndexImport
      parentRoute: typeof PcImport
    }
    '/campaigns/$campaignId/': {
      id: '/campaigns/$campaignId/'
      path: '/'
      fullPath: '/campaigns/$campaignId/'
      preLoaderRoute: typeof CampaignsCampaignIdIndexImport
      parentRoute: typeof CampaignsCampaignIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRouteRoute,
  DmRoute: DmRoute.addChildren({ DmBattleRoute, DmIndexRoute }),
  PcRoute: PcRoute.addChildren({ PcCharacterSheetRoute, PcIndexRoute }),
  AuthEmailConfirmRoute,
  AuthLoginRoute,
  AuthProfileRoute,
  AuthSignupRoute,
  CampaignsCampaignIdRoute: CampaignsCampaignIdRoute.addChildren({
    CampaignsCampaignIdIndexRoute,
  }),
  CampaignsIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dm",
        "/pc",
        "/auth/email-confirm",
        "/auth/login",
        "/auth/profile",
        "/auth/signup",
        "/campaigns/$campaignId",
        "/campaigns/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about/route.tsx"
    },
    "/dm": {
      "filePath": "dm.tsx",
      "children": [
        "/dm/battle",
        "/dm/"
      ]
    },
    "/pc": {
      "filePath": "pc.tsx",
      "children": [
        "/pc/character-sheet",
        "/pc/"
      ]
    },
    "/auth/email-confirm": {
      "filePath": "auth/email-confirm.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/profile": {
      "filePath": "auth/profile.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/campaigns/$campaignId": {
      "filePath": "campaigns.$campaignId.tsx",
      "children": [
        "/campaigns/$campaignId/"
      ]
    },
    "/dm/battle": {
      "filePath": "dm/battle.tsx",
      "parent": "/dm"
    },
    "/pc/character-sheet": {
      "filePath": "pc/character-sheet.tsx",
      "parent": "/pc"
    },
    "/campaigns/": {
      "filePath": "campaigns/index.tsx"
    },
    "/dm/": {
      "filePath": "dm/index.tsx",
      "parent": "/dm"
    },
    "/pc/": {
      "filePath": "pc/index.tsx",
      "parent": "/pc"
    },
    "/campaigns/$campaignId/": {
      "filePath": "campaigns/$campaignId/index.tsx",
      "parent": "/campaigns/$campaignId"
    }
  }
}
ROUTE_MANIFEST_END */
